<style>
  :root {
    --primary-color: #1a8917;
    --primary-dark: #0f7a0d;
    --secondary-color: #6b6b6b;
    --accent-color: #ffc017;
    --success-color: #1a8917;
    --danger-color: #e74c3c;
    --warning-color: #f39c12;
    --light-bg: #fafafa;
    --dark-bg: #242424;
    --text-primary: #242424;
    --text-secondary: #6b6b6b;
    --text-muted: #959595;
    --border-color: #e6e6e6;
    --shadow-sm: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    --shadow-md: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    --shadow-lg: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  }

  /* Modern Navbar Styling - Consistent across all pages */
  .navbar {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--border-color);
    padding: 0.5rem 0;
    position: sticky;
    top: 0;
    z-index: 1000;
    box-shadow: var(--shadow-sm);
  }

  .navbar .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .navbar-brand {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--primary-color) !important;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
    flex-shrink: 0;
  }

  .navbar-brand:hover {
    color: var(--primary-dark) !important;
    transform: translateY(-1px);
  }

  .navbar-brand i {
    font-size: 1.5rem;
  }

  .navbar-nav {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
    list-style: none;
    flex: 1;
    justify-content: flex-end;
  }

  .nav-item {
    margin: 0;
  }

  /* Ensure consistent spacing between navigation items */
  .navbar-nav .nav-item:not(:last-child) {
    margin-right: 0.5rem;
  }

  .nav-link {
    color: var(--text-primary) !important;
    font-weight: 500;
    padding: 0.5rem 0.75rem !important;
    border-radius: 8px;
    margin: 0 0.25rem;
    transition: all 0.3s ease;
    position: relative;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
  }

  .nav-link:hover {
    color: var(--primary-color) !important;
    background: rgba(26, 137, 23, 0.1);
    transform: translateY(-1px);
  }

  .nav-link.active {
    color: var(--primary-color) !important;
    background: rgba(26, 137, 23, 0.15);
    font-weight: 600;
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 20px;
    height: 3px;
    background: var(--primary-color);
    border-radius: 2px;
  }

  .nav-link i {
    font-size: 0.9rem;
  }

  .dropdown-toggle {
    color: var(--text-primary) !important;
    font-weight: 500;
    padding: 0.5rem 0.75rem !important;
    border-radius: 8px;
    margin: 0 0.25rem;
    transition: all 0.3s ease;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .dropdown-toggle:hover {
    color: var(--primary-color) !important;
    background: rgba(26, 137, 23, 0.1);
    transform: translateY(-1px);
  }

  .dropdown-toggle::after {
    margin-left: 0.5rem;
    transition: transform 0.3s ease;
  }

  .dropdown-toggle[aria-expanded="true"]::after {
    transform: rotate(180deg);
  }

  .dropdown-menu {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    box-shadow: var(--shadow-lg);
    padding: 0.5rem;
    margin-top: 0.5rem;
    min-width: 200px;
  }

  .dropdown-item {
    color: var(--text-primary) !important;
    padding: 0.75rem 1rem;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
  }

  .dropdown-item:hover {
    background: rgba(26, 137, 23, 0.1);
    color: var(--primary-color) !important;
    transform: translateX(5px);
  }

  .dropdown-item i {
    width: 16px;
    text-align: center;
  }

  .navbar-toggler {
    border: none;
    padding: 0.5rem;
    border-radius: 8px;
    transition: all 0.3s ease;
  }

  .navbar-toggler:focus {
    box-shadow: none;
    background: rgba(26, 137, 23, 0.1);
  }

  .navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(26, 137, 23, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
  }

  .notification-badge {
    background: var(--danger-color);
    color: white;
    border-radius: 50%;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    font-weight: 600;
    margin-left: 0.5rem;
    min-width: 20px;
    text-align: center;
  }

  .user-avatar {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    background: var(--primary-color);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 0.75rem;
    margin-right: 0.5rem;
    flex-shrink: 0;
  }

  /* Ensure consistent spacing for navigation items */
  .navbar-nav .nav-item:not(:last-child) {
    margin-right: 0.5rem;
  }

  /* Mobile Slide-out Navigation */
  @media (max-width: 991.98px) {
    .navbar {
      padding: 0.25rem 0;
    }

    /* Mobile menu overlay */
    .mobile-menu-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 999;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .mobile-menu-overlay.show {
      opacity: 1;
      visibility: visible;
    }

    /* Mobile menu drawer */
    .navbar-collapse {
      position: fixed;
      top: 0;
      left: -280px;
      width: 280px;
      height: 100vh;
      height: 100dvh; /* Use dynamic viewport height for better mobile support */
      background: white;
      z-index: 1000;
      transition: left 0.3s ease;
      box-shadow: var(--shadow-lg);
      overflow-y: auto;
      padding: 1rem 0;
      transform: translateZ(0); /* Force hardware acceleration */
    }

    .navbar-collapse.show {
      left: 0;
      height: 100dvh !important;
    }

    /* Mobile menu header */
    .mobile-menu-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1rem 1.5rem;
      border-bottom: 1px solid var(--border-color);
      margin-bottom: 1rem;
    }

    .mobile-menu-header .navbar-brand {
      font-size: 1.25rem;
      margin: 0;
    }

    .mobile-close-btn {
      background: none;
      border: none;
      font-size: 1.5rem;
      color: var(--text-secondary);
      cursor: pointer;
      padding: 0.5rem;
      border-radius: 8px;
      transition: all 0.3s ease;
    }

    .mobile-close-btn:hover {
      background: rgba(26, 137, 23, 0.1);
      color: var(--primary-color);
    }

    /* Mobile navigation items */
    .navbar-nav {
      flex-direction: column;
      width: 100%;
      padding: 0;
      margin: 0;
      gap: 0;
    }

    .nav-item {
      width: 100%;
      margin: 0;
    }

    .nav-link {
      width: 100%;
      padding: 1rem 1.5rem !important;
      margin: 0;
      border-radius: 0;
      border-bottom: 1px solid var(--border-color);
      justify-content: flex-start;
      font-size: 1rem;
    }

    .nav-link:hover {
      background: rgba(26, 137, 23, 0.05);
      transform: none;
    }

    .nav-link.active {
      background: rgba(26, 137, 23, 0.1);
      border-left: 4px solid var(--primary-color);
    }

    /* Remove the dark green underline on mobile for active nav links */
    .nav-link.active::after {
      display: none;
    }

    .nav-link i {
      font-size: 1.1rem;
      width: 20px;
      text-align: center;
    }

    /* Mobile dropdown */
    .dropdown-toggle {
      width: 100%;
      padding: 1rem 1.5rem !important;
      margin: 0;
      border-radius: 0;
      border-bottom: 1px solid var(--border-color);
      justify-content: flex-start;
      font-size: 1rem;
      cursor: pointer;
    }

    .dropdown-toggle:hover {
      background: rgba(26, 137, 23, 0.05);
      transform: none;
    }

    .dropdown-toggle i {
      font-size: 1.1rem;
      width: 20px;
      text-align: center;
    }

    .dropdown-toggle::after {
      margin-left: auto;
      transition: transform 0.3s ease;
    }

    .dropdown-toggle[aria-expanded="true"]::after {
      transform: rotate(180deg);
    }

    .dropdown-menu {
      position: static !important;
      background: rgba(26, 137, 23, 0.05);
      border: none;
      box-shadow: none;
      padding: 0;
      margin: 0;
      border-radius: 0;
      display: none;
    }

    .mobile-dropdown-menu {
      position: static !important;
      background: rgba(26, 137, 23, 0.05);
      border: none;
      box-shadow: none;
      padding: 0;
      margin: 0;
      border-radius: 0;
      display: none;
      width: 100%;
      min-width: auto;
    }

    .mobile-dropdown-menu.show {
      display: block !important;
    }

    .dropdown-menu.show {
      display: block;
    }

    /* Override Bootstrap dropdown behavior on mobile */
    @media (max-width: 991.98px) {
      .dropdown-menu-end {
        position: static !important;
        transform: none !important;
        width: 100% !important;
        min-width: auto !important;
        display: none !important;
      }
      
      .dropdown-menu-end.show {
        display: block !important;
      }
      
      .mobile-dropdown-menu {
        display: none !important;
      }
      
      .mobile-dropdown-menu.show {
        display: block !important;
      }
    }

    .dropdown-item {
      padding: 0.75rem 2rem;
      margin: 0;
      border-radius: 0;
      border-bottom: 1px solid rgba(26, 137, 23, 0.1);
      font-size: 0.9rem;
    }

    .dropdown-item:hover {
      background: rgba(26, 137, 23, 0.1);
      transform: none;
    }

    .dropdown-item i {
      width: 16px;
      text-align: center;
    }

    /* Hide desktop elements on mobile */
    .navbar-nav .nav-item:not(:last-child) {
      margin-right: 0;
    }

    .user-avatar {
      width: 24px;
      height: 24px;
      font-size: 0.7rem;
    }

    .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }

    /* Mobile hamburger button */
    .navbar-toggler {
      border: none;
      padding: 0.5rem;
      border-radius: 8px;
      transition: all 0.3s ease;
      background: none;
    }

    .navbar-toggler:focus {
      box-shadow: none;
      background: rgba(26, 137, 23, 0.1);
    }

    .navbar-toggler-icon {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(26, 137, 23, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
    }
  }

  /* Animation for dropdown */
  .dropdown-menu.show {
    animation: slideDown 0.3s ease;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Card Styling (keeping existing) */
  .card {
    margin-bottom: 30px;
    box-shadow: var(--shadow-sm);
    border: none;
    border-radius: 12px;
  }

  .card img {
    height: 200px;
    object-fit: cover;
    border-radius: 12px 12px 0 0;
  }

  .card-body {
    background-color: var(--light-bg);
    border-radius: 0 0 12px 12px;
  }

  .card-title {
    font-size: 1.25em;
    font-weight: bold;
    color: var(--text-primary);
  }

  .btn-secondary {
    background-color: var(--secondary-color);
    border-color: var(--secondary-color);
    transition: all 0.3s ease;
  }

  .btn-secondary:hover {
    background-color: var(--text-secondary);
    border-color: var(--text-secondary);
    transform: translateY(-1px);
  }
</style>

<!-- Modern Navbar -->
<nav class="navbar navbar-expand-lg">
  <div class="container">
    <a class="navbar-brand" href="/">
      <i class="fas fa-pen-fancy"></i>
      Blogify
    </a>
    
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarNavDropdown"
      aria-controls="navbarNavDropdown"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
    
    <!-- Mobile menu overlay -->
    <div class="mobile-menu-overlay" id="mobileMenuOverlay"></div>
    
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
      <!-- Mobile menu header -->
      <div class="mobile-menu-header d-lg-none">
        <a class="navbar-brand" href="/">
          <i class="fas fa-pen-fancy"></i>
          Blogify
        </a>
        <button class="mobile-close-btn" id="mobileCloseBtn">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <ul class="navbar-nav ms-auto">
        <li class="nav-item">
          <a
            class="nav-link <%= currentRoute === '/' ? 'active' : '' %>"
            href="/"
          >
            <i class="fas fa-home"></i>
            Home
          </a>
        </li>
        
        <% if (locals.user) { %>
          <li class="nav-item">
            <a
              class="nav-link <%= currentRoute === '/add-new' ? 'active' : '' %>"
              href="/blog/add-new"
            >
              <i class="fas fa-plus"></i>
              Add Blog
            </a>
          </li>
          
          <li class="nav-item">
            <a
              class="nav-link <%= currentRoute === '/chats' ? 'active' : '' %>"
              href="/chats"
            >
              <i class="fas fa-comments"></i>
              Chats
              <% if (locals.unreadChats && locals.unreadChats > 0) { %>
                <span class="notification-badge"><%= locals.unreadChats %></span>
              <% } %>
            </a>
          </li>
          
          <li class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle"
              href="#"
              role="button"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              <div class="user-avatar">
                <%= locals.user.fullName ? locals.user.fullName.charAt(0).toUpperCase() : 'U' %>
              </div>
              <%= locals.user.fullName || locals.user.username %>
            </a>
            
            <ul class="dropdown-menu dropdown-menu-end mobile-dropdown-menu">
              <li>
                <a class="dropdown-item" href="/profile/<%= user._id %>">
                  <i class="fas fa-user"></i>
                  Profile
                </a>
              </li>
              
              <li>
                <a class="dropdown-item" href="/user/<%= user._id %>/latestNotifications">
                  <i class="fas fa-bell"></i>
                  Notifications
                  <% if (locals.user && locals.user.notifications && locals.user.notifications.length > 0) { %>
                    <span class="notification-badge"><%= locals.user.notifications.length %></span>
                  <% } %>
                </a>
              </li>
              
              <li>
                <a class="dropdown-item" href="/blog/<%= user._id %>/bookmarks">
                  <i class="fas fa-bookmark"></i>
                  Bookmarks
                </a>
              </li>
              
              <% if (locals.messageNotifications?.length > 0) { %>
                <li>
                  <a class="dropdown-item" href="/profile/<%= user._id %>/messageNotifications">
                    <i class="fas fa-comments"></i>
                    Messages
                    <span class="notification-badge"><%= locals.messageNotifications.length %></span>
                  </a>
                </li>
              <% } %>
              
              <li><hr class="dropdown-divider"></li>
              
              <li>
                <a class="dropdown-item" href="/user/logout">
                  <i class="fas fa-sign-out-alt"></i>
                  Log Out
                </a>
              </li>
            </ul>
          </li>
        <% } else { %>
          <li class="nav-item">
            <a
              class="nav-link <%= currentRoute === '/user/signup' ? 'active' : '' %>"
              href="/user/signup"
            >
              <i class="fas fa-user-plus"></i>
              Create Account
            </a>
          </li>
          
          <li class="nav-item">
            <a
              class="nav-link <%= currentRoute === '/user/signin' ? 'active' : '' %>"
              href="/user/signin"
            >
              <i class="fas fa-sign-in-alt"></i>
              Sign In
            </a>
          </li>
        <% } %>
      </ul>
    </div>
  </div>
</nav>

<!-- Include Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>
<script src="/socket.io/socket.io.js"></script>

<!-- Mobile Navigation Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const navbarToggler = document.querySelector('.navbar-toggler');
  const navbarCollapse = document.querySelector('.navbar-collapse');
  const mobileMenuOverlay = document.getElementById('mobileMenuOverlay');
  const mobileCloseBtn = document.getElementById('mobileCloseBtn');
  
  // Handle dropdown behavior for both mobile and desktop
  function setupDropdowns() {
    const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
    
    dropdownToggles.forEach(toggle => {
      if (window.innerWidth <= 991.98) {
        // Remove Bootstrap dropdown on mobile
        toggle.removeAttribute('data-bs-toggle');
      } else {
        // Restore Bootstrap dropdown on desktop
        toggle.setAttribute('data-bs-toggle', 'dropdown');
      }
    });
  }
  
  // Initial setup
  setupDropdowns();
  
  // Open mobile menu
  navbarToggler.addEventListener('click', function() {
    // Set height immediately before adding show class
    navbarCollapse.style.height = '100dvh';
    navbarCollapse.classList.add('show');
    mobileMenuOverlay.classList.add('show');
    document.body.style.overflow = 'hidden'; // Prevent background scroll
  });
  
  // Close mobile menu
  function closeMobileMenu() {
    navbarCollapse.classList.remove('show');
    mobileMenuOverlay.classList.remove('show');
    document.body.style.overflow = ''; // Restore scroll
  }
  
  // Close on overlay click
  mobileMenuOverlay.addEventListener('click', closeMobileMenu);
  
  // Close on close button click
  mobileCloseBtn.addEventListener('click', closeMobileMenu);
  
  // Close on escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && navbarCollapse.classList.contains('show')) {
      closeMobileMenu();
    }
  });
  
  // Handle mobile dropdowns
  const mobileDropdownToggles = document.querySelectorAll('.dropdown-toggle');
  mobileDropdownToggles.forEach(toggle => {
    toggle.addEventListener('click', function(e) {
      if (window.innerWidth <= 991.98) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        
        const dropdownMenu = this.nextElementSibling;
        const isExpanded = this.getAttribute('aria-expanded') === 'true';
        
        console.log('Mobile dropdown clicked:', dropdownMenu); // Debug log
        console.log('Dropdown menu element:', dropdownMenu.outerHTML); // Debug log
        
        // Close all other dropdowns
        mobileDropdownToggles.forEach(otherToggle => {
          if (otherToggle !== this) {
            otherToggle.setAttribute('aria-expanded', 'false');
            const otherMenu = otherToggle.nextElementSibling;
            otherMenu.classList.remove('show');
            if (otherMenu.classList.contains('mobile-dropdown-menu')) {
              otherMenu.classList.remove('show');
            }
          }
        });
        
        // Toggle current dropdown
        this.setAttribute('aria-expanded', !isExpanded);
        dropdownMenu.classList.toggle('show');
        
        console.log('Dropdown classes after toggle:', dropdownMenu.classList.toString()); // Debug log
        console.log('Dropdown display style:', window.getComputedStyle(dropdownMenu).display); // Debug log
        
        return false;
      }
    }, true); // Use capture phase to ensure our handler runs first
  });
  
  // Close on navigation link click (mobile only) - but not dropdown toggles
  const mobileNavLinks = document.querySelectorAll('.navbar-nav .nav-link:not(.dropdown-toggle), .navbar-nav .dropdown-item');
  mobileNavLinks.forEach(link => {
    link.addEventListener('click', function() {
      if (window.innerWidth <= 991.98) {
        closeMobileMenu();
      }
    });
  });
  
  // Handle window resize
  window.addEventListener('resize', function() {
    if (window.innerWidth > 991.98) {
      closeMobileMenu();
    }
    // Re-setup dropdowns when screen size changes
    setupDropdowns();
  });
});
</script>
